{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"FastAPI Admin Introduction fastapi-admin is a fast admin dashboard based on FastAPI and TortoiseORM with tabler ui, inspired by Django admin. Looking for old version? See branch v1 . Installation > pip install fastapi-admin Requirements Redis Online Demo You can check a online demo here . username: admin password: 123456 Or Pro version demo here . username: admin password: 123456 Screenshots Documentation See documentation at https://fastapi-admin.github.io/fastapi-admin . License This project is licensed under the Apache-2.0 License.","title":"Home"},{"location":"#fastapi-admin","text":"","title":"FastAPI Admin"},{"location":"#introduction","text":"fastapi-admin is a fast admin dashboard based on FastAPI and TortoiseORM with tabler ui, inspired by Django admin. Looking for old version? See branch v1 .","title":"Introduction"},{"location":"#installation","text":"> pip install fastapi-admin","title":"Installation"},{"location":"#requirements","text":"Redis","title":"Requirements"},{"location":"#online-demo","text":"You can check a online demo here . username: admin password: 123456 Or Pro version demo here . username: admin password: 123456","title":"Online Demo"},{"location":"#screenshots","text":"","title":"Screenshots"},{"location":"#documentation","text":"See documentation at https://fastapi-admin.github.io/fastapi-admin .","title":"Documentation"},{"location":"#license","text":"This project is licensed under the Apache-2.0 License.","title":"License"},{"location":"custom/file/","text":"File Upload Provider","title":"File Upload Provider"},{"location":"custom/file/#file-upload-provider","text":"","title":"File Upload Provider"},{"location":"custom/login/","text":"Login Provider","title":"Login Provider"},{"location":"custom/login/#login-provider","text":"","title":"Login Provider"},{"location":"custom/overwrite/","text":"Override builtin pages and widgets","title":"Override builtin pages and widgets"},{"location":"custom/overwrite/#override-builtin-pages-and-widgets","text":"","title":"Override builtin pages and widgets"},{"location":"custom/page/","text":"Custom Page","title":"Custom Page"},{"location":"custom/page/#custom-page","text":"","title":"Custom Page"},{"location":"custom/widget/","text":"Widget","title":"Widget"},{"location":"custom/widget/#widget","text":"","title":"Widget"},{"location":"getting_started/installation/","text":"Installation From pypi You can install from pypi. > pip install fastapi-admin From source Or you can install from source with latest code. > pip install git+https://github.com/fastapi-admin/fastapi-admin.git With requirements.txt Add the following line. -e https://github.com/fastapi-admin/fastapi-admin.git@develop#egg=fastapi-admin With poetry Add the following line in section [tool.poetry.dependencies] . fastapi-admin = { git = 'https://github.com/fastapi-admin/fastapi-admin.git' , branch = 'develop' }","title":"Installation"},{"location":"getting_started/installation/#installation","text":"","title":"Installation"},{"location":"getting_started/installation/#from-pypi","text":"You can install from pypi. > pip install fastapi-admin","title":"From pypi"},{"location":"getting_started/installation/#from-source","text":"Or you can install from source with latest code. > pip install git+https://github.com/fastapi-admin/fastapi-admin.git","title":"From source"},{"location":"getting_started/installation/#with-requirementstxt","text":"Add the following line. -e https://github.com/fastapi-admin/fastapi-admin.git@develop#egg=fastapi-admin","title":"With requirements.txt"},{"location":"getting_started/installation/#with-poetry","text":"Add the following line in section [tool.poetry.dependencies] . fastapi-admin = { git = 'https://github.com/fastapi-admin/fastapi-admin.git' , branch = 'develop' }","title":"With poetry"},{"location":"getting_started/quick_start/","text":"Quick Start FastAPI-Admin is easy to mount your FastAPI app, just need a few configs. Mount Admin App First, you need mount the admin app from FastAPI-Admin as a sub application of FastAPI . from fastapi_admin.app import app as admin_app from fastapi import FastAPI app = FastAPI () app . mount ( \"/admin\" , admin_app ) Configure Admin App There are some configs to configure the admin app, and you need to configure it on startup of FastAPI . from fastapi_admin.app import app as admin_app from fastapi_admin.providers.login import UsernamePasswordProvider from examples.models import User import aioredis from fastapi import FastAPI login_provider = UsernamePasswordProvider ( user_model = User , enable_captcha = True ) app = FastAPI () @app . on_event ( \"startup\" ) async def startup (): redis = await aioredis . create_redis_pool ( \"redis://localhost\" , encoding = \"utf8\" ) admin_app . configure ( logo_url = \"https://preview.tabler.io/static/logo-white.svg\" , login_logo_url = \"https://preview.tabler.io/static/logo.svg\" , template_folders = [ os . path . join ( BASE_DIR , \"templates\" )], login_provider = login_provider , maintenance = False , redis = redis , ) The full list of configs and detail can be found in Configuration . Define And Register Resource There are three kinds of resources, which are Link , Model , and Dropdown . Link The Link will display a menu in sidebar with custom page or third page. from fastapi_admin.app import app from fastapi_admin.resources import Link @app . register class Home ( Link ): label = \"Home\" icon = \"ti ti-home\" url = \"/admin\" Model Field The Field is used in Model resource to define how to display and input every field in model page. The Model make a TortoiseORM model as a menu with CURD page. from examples.models import User from fastapi_admin.app import app from fastapi_admin.resources import Field , Model from fastapi_admin.widgets import displays , filters , inputs @app . register class UserResource ( Model ): label = \"User\" model = User icon = \"ti ti-user\" page_pre_title = \"user list\" page_title = \"user model\" filters = [ filters . Search ( name = \"username\" , label = \"Name\" , search_mode = \"contains\" , placeholder = \"Search for username\" ), filters . Date ( name = \"created_at\" , label = \"CreatedAt\" ), ] fields = [ \"id\" , \"username\" , Field ( name = \"password\" , label = \"Password\" , display = displays . InputOnly (), input_ = inputs . Password (), ), Field ( name = \"email\" , label = \"Email\" , input_ = inputs . Email ()), Field ( name = \"avatar\" , label = \"Avatar\" , display = displays . Image ( width = \"40\" ), input_ = inputs . Image ( null = True , upload_provider = upload_provider ), ), \"is_superuser\" , \"is_active\" , \"created_at\" , ] Dropdown The Dropdown can contains both Link and Model , which can be nested. from examples import enums from examples.models import Category , Product from fastapi_admin.app import app from fastapi_admin.resources import Dropdown , Field , Model from fastapi_admin.widgets import displays , filters @app . register class Content ( Dropdown ): class CategoryResource ( Model ): label = \"Category\" model = Category fields = [ \"id\" , \"name\" , \"slug\" , \"created_at\" ] class ProductResource ( Model ): label = \"Product\" model = Product filters = [ filters . Enum ( enum = enums . ProductType , name = \"type\" , label = \"ProductType\" ), filters . Datetime ( name = \"created_at\" , label = \"CreatedAt\" ), ] fields = [ \"id\" , \"name\" , \"view_num\" , \"sort\" , \"is_reviewed\" , \"type\" , Field ( name = \"image\" , label = \"Image\" , display = displays . Image ( width = \"40\" )), \"body\" , \"created_at\" , ] label = \"Content\" icon = \"ti ti-package\" resources = [ ProductResource , CategoryResource ] What's next? That's all, you can run your app now. For more reference you can see Reference .","title":"Quick Start"},{"location":"getting_started/quick_start/#quick-start","text":"FastAPI-Admin is easy to mount your FastAPI app, just need a few configs.","title":"Quick Start"},{"location":"getting_started/quick_start/#mount-admin-app","text":"First, you need mount the admin app from FastAPI-Admin as a sub application of FastAPI . from fastapi_admin.app import app as admin_app from fastapi import FastAPI app = FastAPI () app . mount ( \"/admin\" , admin_app )","title":"Mount Admin App"},{"location":"getting_started/quick_start/#configure-admin-app","text":"There are some configs to configure the admin app, and you need to configure it on startup of FastAPI . from fastapi_admin.app import app as admin_app from fastapi_admin.providers.login import UsernamePasswordProvider from examples.models import User import aioredis from fastapi import FastAPI login_provider = UsernamePasswordProvider ( user_model = User , enable_captcha = True ) app = FastAPI () @app . on_event ( \"startup\" ) async def startup (): redis = await aioredis . create_redis_pool ( \"redis://localhost\" , encoding = \"utf8\" ) admin_app . configure ( logo_url = \"https://preview.tabler.io/static/logo-white.svg\" , login_logo_url = \"https://preview.tabler.io/static/logo.svg\" , template_folders = [ os . path . join ( BASE_DIR , \"templates\" )], login_provider = login_provider , maintenance = False , redis = redis , ) The full list of configs and detail can be found in Configuration .","title":"Configure Admin App"},{"location":"getting_started/quick_start/#define-and-register-resource","text":"There are three kinds of resources, which are Link , Model , and Dropdown .","title":"Define And Register Resource"},{"location":"getting_started/quick_start/#link","text":"The Link will display a menu in sidebar with custom page or third page. from fastapi_admin.app import app from fastapi_admin.resources import Link @app . register class Home ( Link ): label = \"Home\" icon = \"ti ti-home\" url = \"/admin\"","title":"Link"},{"location":"getting_started/quick_start/#model","text":"","title":"Model"},{"location":"getting_started/quick_start/#field","text":"The Field is used in Model resource to define how to display and input every field in model page. The Model make a TortoiseORM model as a menu with CURD page. from examples.models import User from fastapi_admin.app import app from fastapi_admin.resources import Field , Model from fastapi_admin.widgets import displays , filters , inputs @app . register class UserResource ( Model ): label = \"User\" model = User icon = \"ti ti-user\" page_pre_title = \"user list\" page_title = \"user model\" filters = [ filters . Search ( name = \"username\" , label = \"Name\" , search_mode = \"contains\" , placeholder = \"Search for username\" ), filters . Date ( name = \"created_at\" , label = \"CreatedAt\" ), ] fields = [ \"id\" , \"username\" , Field ( name = \"password\" , label = \"Password\" , display = displays . InputOnly (), input_ = inputs . Password (), ), Field ( name = \"email\" , label = \"Email\" , input_ = inputs . Email ()), Field ( name = \"avatar\" , label = \"Avatar\" , display = displays . Image ( width = \"40\" ), input_ = inputs . Image ( null = True , upload_provider = upload_provider ), ), \"is_superuser\" , \"is_active\" , \"created_at\" , ]","title":"Field"},{"location":"getting_started/quick_start/#dropdown","text":"The Dropdown can contains both Link and Model , which can be nested. from examples import enums from examples.models import Category , Product from fastapi_admin.app import app from fastapi_admin.resources import Dropdown , Field , Model from fastapi_admin.widgets import displays , filters @app . register class Content ( Dropdown ): class CategoryResource ( Model ): label = \"Category\" model = Category fields = [ \"id\" , \"name\" , \"slug\" , \"created_at\" ] class ProductResource ( Model ): label = \"Product\" model = Product filters = [ filters . Enum ( enum = enums . ProductType , name = \"type\" , label = \"ProductType\" ), filters . Datetime ( name = \"created_at\" , label = \"CreatedAt\" ), ] fields = [ \"id\" , \"name\" , \"view_num\" , \"sort\" , \"is_reviewed\" , \"type\" , Field ( name = \"image\" , label = \"Image\" , display = displays . Image ( width = \"40\" )), \"body\" , \"created_at\" , ] label = \"Content\" icon = \"ti ti-package\" resources = [ ProductResource , CategoryResource ]","title":"Dropdown"},{"location":"getting_started/quick_start/#whats-next","text":"That's all, you can run your app now. For more reference you can see Reference .","title":"What's next?"},{"location":"pro/","text":"Exclusive content Login Captcha You can set captcha in admin login page, just set enable_captcha=True . login_provider = UsernamePasswordProvider ( user_model = User , enable_captcha = True ) Failed Login IP Limitation If you want limit login failed ip with error password, you can use LoginPasswordMaxTryMiddleware . admin_app . add_middleware ( BaseHTTPMiddleware , dispatch = LoginPasswordMaxTryMiddleware ( max_times = 3 , after_seconds = 360 )) Permission Control Additional File Upload Providers ALiYunOSSProvider AwsS3Provider Error pages 404 You can catch all 404 error to show builtin 404 page. from fastapi_admin.exceptions import not_found_error_exception from starlette.status import HTTP_404_NOT_FOUND app . add_exception_handler ( HTTP_404_NOT_FOUND , not_found_error_exception ) 500 You can catch all 500 error to show builtin 500 page. from starlette.status import HTTP_500_INTERNAL_SERVER_ERROR from fastapi_admin.exceptions import server_error_exception app . add_exception_handler ( HTTP_500_INTERNAL_SERVER_ERROR , server_error_exception ) Maintenance If your site is in maintenance, you can set true to admin_app.configure(...) . admin_app . configure ( maintenance = True ) Admin Log Free consultation Whenever you have any questions, you can send email to long2ice@gmai.com or open issue in fastapi-admin-pro repository, I will answer your questions as soon as possible.","title":"Exclusive content"},{"location":"pro/#exclusive-content","text":"","title":"Exclusive content"},{"location":"pro/#login-captcha","text":"You can set captcha in admin login page, just set enable_captcha=True . login_provider = UsernamePasswordProvider ( user_model = User , enable_captcha = True )","title":"Login Captcha"},{"location":"pro/#failed-login-ip-limitation","text":"If you want limit login failed ip with error password, you can use LoginPasswordMaxTryMiddleware . admin_app . add_middleware ( BaseHTTPMiddleware , dispatch = LoginPasswordMaxTryMiddleware ( max_times = 3 , after_seconds = 360 ))","title":"Failed Login IP Limitation"},{"location":"pro/#permission-control","text":"","title":"Permission Control"},{"location":"pro/#additional-file-upload-providers","text":"","title":"Additional File Upload Providers"},{"location":"pro/#aliyunossprovider","text":"","title":"ALiYunOSSProvider"},{"location":"pro/#awss3provider","text":"","title":"AwsS3Provider"},{"location":"pro/#error-pages","text":"","title":"Error pages"},{"location":"pro/#404","text":"You can catch all 404 error to show builtin 404 page. from fastapi_admin.exceptions import not_found_error_exception from starlette.status import HTTP_404_NOT_FOUND app . add_exception_handler ( HTTP_404_NOT_FOUND , not_found_error_exception )","title":"404"},{"location":"pro/#500","text":"You can catch all 500 error to show builtin 500 page. from starlette.status import HTTP_500_INTERNAL_SERVER_ERROR from fastapi_admin.exceptions import server_error_exception app . add_exception_handler ( HTTP_500_INTERNAL_SERVER_ERROR , server_error_exception )","title":"500"},{"location":"pro/#maintenance","text":"If your site is in maintenance, you can set true to admin_app.configure(...) . admin_app . configure ( maintenance = True )","title":"Maintenance"},{"location":"pro/#admin-log","text":"","title":"Admin Log"},{"location":"pro/#free-consultation","text":"Whenever you have any questions, you can send email to long2ice@gmai.com or open issue in fastapi-admin-pro repository, I will answer your questions as soon as possible.","title":"Free consultation"},{"location":"pro/installation/","text":"Installation Because pro version won't publish to pypi, so you can't install from it. Requirements In order to access the repository programmatically (from the command line or GitHub Actions workflows), you need to create a personal access token: Go to https://github.com/settings/tokens . Click on Generate a new token. Enter a name and select the repo scope. Generate the token and store it in a safe place. With pip > pip install git+https:// ${ GH_TOKEN } @github.com/fastapi-admin/fastapi-admin-pro.git With poetry Add the following line in section [tool.poetry.dependencies] . fastapi-admin-pro = { git = 'https://${GH_TOKEN}@github.com/fastapi-admin/fastapi-admin-pro.git' , branch = 'develop' } In requirements.txt Add the following line. -e https:// ${ GH_TOKEN } @github.com/fastapi-admin/fastapi-admin-pro.git@develop#egg = fastapi-admin-pro","title":"Installation"},{"location":"pro/installation/#installation","text":"Because pro version won't publish to pypi, so you can't install from it.","title":"Installation"},{"location":"pro/installation/#requirements","text":"In order to access the repository programmatically (from the command line or GitHub Actions workflows), you need to create a personal access token: Go to https://github.com/settings/tokens . Click on Generate a new token. Enter a name and select the repo scope. Generate the token and store it in a safe place.","title":"Requirements"},{"location":"pro/installation/#with-pip","text":"> pip install git+https:// ${ GH_TOKEN } @github.com/fastapi-admin/fastapi-admin-pro.git","title":"With pip"},{"location":"pro/installation/#with-poetry","text":"Add the following line in section [tool.poetry.dependencies] . fastapi-admin-pro = { git = 'https://${GH_TOKEN}@github.com/fastapi-admin/fastapi-admin-pro.git' , branch = 'develop' }","title":"With poetry"},{"location":"pro/installation/#in-requirementstxt","text":"Add the following line. -e https:// ${ GH_TOKEN } @github.com/fastapi-admin/fastapi-admin-pro.git@develop#egg = fastapi-admin-pro","title":"In requirements.txt"},{"location":"pro/sponsor/","text":"Sponsor The pro version is just for the sponsors. As a sponsor, you will be invited to fastapi-admin organization as a outside collaborator with readonly access, and you can get the pro features and get updates for a time. How to become a sponsor Sponsor Link: http://sponsor.long2ice.cn You can choice any sponsor way you like. After sponsor, you can email me long2ice@gmail.com with your github account and sponsor way and account, then I will invite you to join fastapi-admin organization. Levels $10 - Month You will be invited and keep collaborator role for a month. $50 - Half a Year You will be invited and keep collaborator role for half a year. $90 - Year You will be invited and keep collaborator role for a year.","title":"Sponsor"},{"location":"pro/sponsor/#sponsor","text":"The pro version is just for the sponsors. As a sponsor, you will be invited to fastapi-admin organization as a outside collaborator with readonly access, and you can get the pro features and get updates for a time.","title":"Sponsor"},{"location":"pro/sponsor/#how-to-become-a-sponsor","text":"Sponsor Link: http://sponsor.long2ice.cn You can choice any sponsor way you like. After sponsor, you can email me long2ice@gmail.com with your github account and sponsor way and account, then I will invite you to join fastapi-admin organization.","title":"How to become a sponsor"},{"location":"pro/sponsor/#levels","text":"","title":"Levels"},{"location":"pro/sponsor/#10-month","text":"You will be invited and keep collaborator role for a month.","title":"$10 - Month"},{"location":"pro/sponsor/#50-half-a-year","text":"You will be invited and keep collaborator role for half a year.","title":"$50 - Half a Year"},{"location":"pro/sponsor/#90-year","text":"You will be invited and keep collaborator role for a year.","title":"$90 - Year"},{"location":"reference/admin_log/","text":"Admin Log (\ud83d\udc97 Pro only)","title":"Admin Log (\ud83d\udc97 Pro only)"},{"location":"reference/admin_log/#admin-log-pro-only","text":"","title":"Admin Log (\ud83d\udc97 Pro only)"},{"location":"reference/configuration/","text":"Configuration The following configurations can be used to admin_app.configure(...) . logo_url Will show the logo image in admin dashboard. login_logo_url Will show the logo in login page. admin_path Default is /admin , but you can change to other page. maintenance (\ud83d\udc97 Pro only) If set to true , all pages will be redirected to the /maintenance page. redis Instance of aioredis . default_locale Current support zh and en , default is en . template_folders Template folders used to override builtin templates. login_provider You can pass subclasses of fastapi_admin.providers.login.LoginProvider , there is a builtin fastapi_admin.providers.login.UsernamePasswordProvider you can use. user_model Subclass instance of fastapi_admin.providers.login.UserMixin . enable_captcha (\ud83d\udc97 Pro only) Show captcha in admin login page.","title":"Configuration"},{"location":"reference/configuration/#configuration","text":"The following configurations can be used to admin_app.configure(...) .","title":"Configuration"},{"location":"reference/configuration/#logo_url","text":"Will show the logo image in admin dashboard.","title":"logo_url"},{"location":"reference/configuration/#login_logo_url","text":"Will show the logo in login page.","title":"login_logo_url"},{"location":"reference/configuration/#admin_path","text":"Default is /admin , but you can change to other page.","title":"admin_path"},{"location":"reference/configuration/#maintenance-pro-only","text":"If set to true , all pages will be redirected to the /maintenance page.","title":"maintenance (\ud83d\udc97 Pro only)"},{"location":"reference/configuration/#redis","text":"Instance of aioredis .","title":"redis"},{"location":"reference/configuration/#default_locale","text":"Current support zh and en , default is en .","title":"default_locale"},{"location":"reference/configuration/#template_folders","text":"Template folders used to override builtin templates.","title":"template_folders"},{"location":"reference/configuration/#login_provider","text":"You can pass subclasses of fastapi_admin.providers.login.LoginProvider , there is a builtin fastapi_admin.providers.login.UsernamePasswordProvider you can use.","title":"login_provider"},{"location":"reference/configuration/#user_model","text":"Subclass instance of fastapi_admin.providers.login.UserMixin .","title":"user_model"},{"location":"reference/configuration/#enable_captcha-pro-only","text":"Show captcha in admin login page.","title":"enable_captcha (\ud83d\udc97 Pro only)"},{"location":"reference/file_upload/","text":"File Upload FileUploadProvider ALiYunOSSProvider (\ud83d\udc97 Pro only) AwsS3Provider (\ud83d\udc97 Pro only)","title":"File Upload"},{"location":"reference/file_upload/#file-upload","text":"","title":"File Upload"},{"location":"reference/file_upload/#fileuploadprovider","text":"","title":"FileUploadProvider"},{"location":"reference/file_upload/#aliyunossprovider-pro-only","text":"","title":"ALiYunOSSProvider (\ud83d\udc97 Pro only)"},{"location":"reference/file_upload/#awss3provider-pro-only","text":"","title":"AwsS3Provider (\ud83d\udc97 Pro only)"},{"location":"reference/middleware/","text":"Middleware LoginPasswordMaxTryMiddleware (\ud83d\udc97 Pro only) If you want limit login failed ip with error password, you can use LoginPasswordMaxTryMiddleware . admin_app . add_middleware ( BaseHTTPMiddleware , dispatch = LoginPasswordMaxTryMiddleware ( max_times = 3 , after_seconds = 3600 )) After that, user can try max 3 times password, if all failed, the ip will be limited 3600 seconds.","title":"Middleware"},{"location":"reference/middleware/#middleware","text":"","title":"Middleware"},{"location":"reference/middleware/#loginpasswordmaxtrymiddleware-pro-only","text":"If you want limit login failed ip with error password, you can use LoginPasswordMaxTryMiddleware . admin_app . add_middleware ( BaseHTTPMiddleware , dispatch = LoginPasswordMaxTryMiddleware ( max_times = 3 , after_seconds = 3600 )) After that, user can try max 3 times password, if all failed, the ip will be limited 3600 seconds.","title":"LoginPasswordMaxTryMiddleware (\ud83d\udc97 Pro only)"},{"location":"reference/permission/","text":"Permission Control (\ud83d\udc97 Pro only)","title":"Permission Control (\ud83d\udc97 Pro only)"},{"location":"reference/permission/#permission-control-pro-only","text":"","title":"Permission Control (\ud83d\udc97 Pro only)"},{"location":"reference/resource/","text":"Resource Link Model Field Dropdown","title":"Resource"},{"location":"reference/resource/#resource","text":"","title":"Resource"},{"location":"reference/resource/#link","text":"","title":"Link"},{"location":"reference/resource/#model","text":"","title":"Model"},{"location":"reference/resource/#field","text":"","title":"Field"},{"location":"reference/resource/#dropdown","text":"","title":"Dropdown"},{"location":"reference/widget/display/","text":"","title":"Display"},{"location":"reference/widget/filter/","text":"","title":"Filter"},{"location":"reference/widget/input/","text":"","title":"Input"}]}